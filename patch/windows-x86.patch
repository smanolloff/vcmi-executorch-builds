diff --git a/runtime/platform/compat_unistd.h b/runtime/platform/compat_unistd.h
index c8bc486670..bd1c30f19f 100644
--- a/runtime/platform/compat_unistd.h
+++ b/runtime/platform/compat_unistd.h
@@ -12,12 +12,7 @@
  */
 #pragma once
 
-#if defined(_WIN32) && !defined(_WIN64)
-#error \
-    "You're trying to build ExecuTorch with a too old version of Windows. We need Windows 64-bit."
-#endif
-
-#if !defined(_WIN64)
+#if !defined(_WIN32)
 #include <unistd.h>
 #else
 #include <io.h>
diff --git a/extension/data_loader/mman_windows.cpp b/extension/data_loader/mman_windows.cpp
index 2a7f462f99..a59330c71c 100644
--- a/extension/data_loader/mman_windows.cpp
+++ b/extension/data_loader/mman_windows.cpp
@@ -42,15 +42,15 @@ namespace {
 
 HRESULT try_grow_process_memory_working_set(DWORD dwSizeRequired) {
   // Get current working set
-  size_t minWorkingSetInitial;
-  size_t maxWorkingSet;
+  SIZE_T minWorkingSetInitial;
+  SIZE_T maxWorkingSet;
   if (!GetProcessWorkingSetSize(
           GetCurrentProcess(), &minWorkingSetInitial, &maxWorkingSet)) {
     return GetLastError();
   }
 
   // Calculate new sizes
-  size_t minWorkingSet = minWorkingSetInitial + dwSizeRequired;
+  SIZE_T minWorkingSet = minWorkingSetInitial + static_cast<SIZE_T>(dwSizeRequired);
   if (minWorkingSet < minWorkingSetInitial) {
     return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);
   }
@@ -139,23 +139,17 @@ void* mmap(void* addr, size_t len, int prot, int flags, int fildes, off_t off) {
 #pragma warning(disable : 4293)
 #endif
 
-  const DWORD dwFileOffsetLow = (sizeof(off_t) <= sizeof(DWORD))
-      ? (DWORD)off
-      : (DWORD)(off & 0xFFFFFFFFL);
-  const DWORD dwFileOffsetHigh = (sizeof(off_t) <= sizeof(DWORD))
-      ? (DWORD)0
-      : (DWORD)((off >> 32) & 0xFFFFFFFFL);
+  const unsigned long long off64 = static_cast<unsigned long long>(off);
+  const DWORD dwFileOffsetLow  = static_cast<DWORD>( off64        & 0xFFFFFFFFULL);
+  const DWORD dwFileOffsetHigh = static_cast<DWORD>((off64 >> 32) & 0xFFFFFFFFULL);
+
   const DWORD protect = __map_mmap_prot_page(prot);
   const DWORD desiredAccess = __map_mmap_prot_file(prot);
 
   const off_t maxSize = off + (off_t)len;
-
-  const DWORD dwMaxSizeLow = (sizeof(off_t) <= sizeof(DWORD))
-      ? (DWORD)maxSize
-      : (DWORD)(maxSize & 0xFFFFFFFFL);
-  const DWORD dwMaxSizeHigh = (sizeof(off_t) <= sizeof(DWORD))
-      ? (DWORD)0
-      : (DWORD)((maxSize >> 32) & 0xFFFFFFFFL);
+  const unsigned long long max64 = static_cast<unsigned long long>(maxSize);
+  const DWORD dwMaxSizeLow  = static_cast<DWORD>( max64        & 0xFFFFFFFFULL);
+  const DWORD dwMaxSizeHigh = static_cast<DWORD>((max64 >> 32) & 0xFFFFFFFFULL);
 
 #ifdef _MSC_VER
 #pragma warning(pop)
